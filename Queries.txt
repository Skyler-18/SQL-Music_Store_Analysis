---------------------------EASY QUESTIONS---------------------------



Q1: Who is the senior most employee based on job title?

SELECT * FROM employee
ORDER BY levels DESC
LIMIT 1;



Q2: Which countries have the most Invoices?

SELECT billing_country AS Country, COUNT(invoice_id) as Invoice_num
FROM invoice
GROUP BY billing_country
ORDER BY COUNT(invoice_id) DESC;



Q3: What are top 3 values of total invoice?

SELECT total 
FROM invoice
ORDER BY total DESC
LIMIT 3



Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. Write a query that returns one city that has the highest sum of invoice totals. Return both the city name & sum of all invoice totals

SELECT billing_city AS City, SUM(total) AS Invoice_sum
FROM invoice
GROUP BY billing_city
ORDER BY SUM(total) DESC
LIMIT 1



Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. Write a query that returns the person who has spent the most money.

SELECT c.customer_id, CONCAT(c.first_name, c.last_name) as Name, SUM(i.total) AS Invoice_total
FROM invoice i
INNER JOIN customer c
ON c.customer_id = i.customer_id
GROUP BY c.customer_id
ORDER BY SUM(i.total) DESC
LIMIT 1



---------------------------MODERATE QUESTIONS---------------------------



Q6: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. Return your list ordered alphabetically by email starting with A.

SELECT DISTINCT c.email, c.first_name, c.last_name
FROM customer c
JOIN invoice i ON c.customer_id = i.customer_id
JOIN invoice_line l on i.invoice_id = l.invoice_id
WHERE l.track_id IN (
	SELECT t.track_id
	FROM track t
	INNER JOIN genre g
	ON t.genre_id = g.genre_id
	WHERE g.name = 'Rock')
ORDER BY c.email;



Q7: Let's invite the artists who have written the most rock music in our dataset. Write a query that returns the Artist name and total track count of the top 10 rock bands.

SELECT ar.name, COUNT(t.track_id) AS Tracks_num
FROM artist ar
INNER JOIN album al ON ar.artist_id = al.artist_id
INNER JOIN track t ON al.album_id = t.album_id
WHERE t.genre_id = (
	SELECT genre_id FROM genre
	WHERE name = 'Rock')
GROUP BY ar.name
ORDER BY Tracks_num DESC
LIMIT 10;



Q8: Return all the track names that have a song length longer than the average song length. Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first.

SELECT name, milliseconds
FROM track
WHERE milliseconds > (
	SELECT AVG(milliseconds) FROM track)
ORDER BY milliseconds DESC;



---------------------------ADVANCED QUESTIONS---------------------------



Q9: Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent

WITH most_sold_artist AS (
	SELECT ar.artist_id, ar.name, SUM(il.unit_price*il.quantity) AS Total_sales
	FROM artist ar
	INNER JOIN album al ON ar.artist_id = al.artist_id
	INNER JOIN track t ON al.album_id = t.album_id
	INNER JOIN invoice_line il ON t.track_id = il.track_id
	GROUP BY 1
	ORDER BY 3 DESC
	LIMIT 1
)
SELECT c.first_name, c.last_name, msa.name, SUM(il.unit_price*il.quantity) AS Amount
FROM customer c
INNER JOIN invoice i ON c.customer_id = i.customer_id
INNER JOIN invoice_line il ON i.invoice_id = il.invoice_id
INNER JOIN track t ON il.track_id = t.track_id
INNER JOIN album a ON t.album_id = a.album_id
INNER JOIN most_sold_artist msa ON a.artist_id = msa.artist_id
GROUP BY 1,2,3
ORDER BY 4 DESC;



Q10: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where the maximum number of purchases is shared return all Genres.

WITH country_genre AS (
	SELECT ROW_NUMBER() OVER (PARTITION BY c.country ORDER BY COUNT(il.quantity) DESC) AS Row_num,
	c.country, g.name, COUNT(il.quantity) AS Purchase_num
	FROM customer c
	INNER JOIN invoice i ON c.customer_id = i.customer_id
	INNER JOIN invoice_line il ON i.invoice_id = il.invoice_id
	INNER JOIN track t ON il.track_id = t.track_id
	INNER JOIN genre g ON t.genre_id = g.genre_id
	GROUP BY 2,3
)
SELECT * from country_genre
WHERE Row_num = 1
ORDER BY Purchase_num DESC;



Q11: Write a query that determines the customer that has spent the most on music for each country. Write a query that returns the country along with the top customer and how much they spent. For countries where the top amount spent is shared, provide all customers who spent this amount.

WITH country_customers AS (
	SELECT ROW_NUMBER() OVER (PARTITION BY c.country ORDER BY SUM(i.total) DESC) AS Row_num,
	c.country, c.first_name, c.last_name, SUM(i.total) AS Total_amount
	FROM customer c
	INNER JOIN invoice i ON c.customer_id = i.customer_id
	GROUP BY 2,3,4
	ORDER BY 2
)
SELECT * from country_customers
WHERE Row_num = 1
ORDER BY Total_amount DESC;